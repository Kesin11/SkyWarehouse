name: CI

on:
  push:
    paths-ignore:
    - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Prepare
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: 16
        cache: 'gradle'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Restore and export service account to ENV for GCS remote cache
      run: |
        echo $GCS_SERVICE_ACCOUNT | base64 --decode --ignore-garbage > service.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=service.json" >> $GITHUB_ENV
      if: env.GCS_SERVICE_ACCOUNT
      env:
        GCS_SERVICE_ACCOUNT: ${{ secrets.GCS_SERVICE_ACCOUNT }}

    # Execute
    - name: Build with Gradle
      run: ./gradlew assembleArchive test --profile

    # Post
    - uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          build/libs/*.jar
          build/distributions
      if: always()
    - uses: actions/upload-artifact@v2
      with:
        name: reports
        path: |
          build/test-results/test/*.xml
          build/reports/
      if: always()

  integrate_test:
    runs-on: ubuntu-latest
    needs: build
    env:
      GOOGLE_APPLICATION_CREDENTIALS: service.json
      KEY: "github_actions"
      BUCKET: "kesin11_bazel_cache"
    strategy:
      matrix:
        java: [8, 11, 16]
    steps:
      # Prepare
      - name: Decrypt service account json
        env:
          GCS_SERVICE_ACCOUNT: ${{ secrets.GCS_SERVICE_ACCOUNT }}
        run: echo $GCS_SERVICE_ACCOUNT | base64 --decode --ignore-garbage > service.json
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
      - run: tar -xvf distributions/skw.tar

      # Integrate test
      - run: |
          mkdir -p github_actions/nest
          echo ${{ github.sha }} > github_actions/${{ github.run_number }}.txt
          echo ${{ github.sha }} > github_actions/nest/${{ github.run_number }}.txt
      - name: Upload wildcard paths
        run: |
          ./skw/bin/skw upload \
            -b "$BUCKET" \
            -k "$KEY" \
            -p "java${{ matrix.java }}" \
            -t "${{ github.sha }}-java${{ matrix.java }}" -t "java${{ matrix.java }}" \
            ./github_actions/*.txt
      - name: Upload glob paths
        run: |
          ./skw/bin/skw upload \
            -b "$BUCKET" \
            -k "$KEY" \
            -p "java${{ matrix.java }}" \
            -t "${{ github.sha }}-java${{ matrix.java }}-nest" -t "java${{ matrix.java }}" \
            ./github_actions/*.txt ./github_actions/**/*.txt
      - name: list keys
        run: |
          ./skw/bin/skw keys \
            -b "$BUCKET" \
      - name: list tags
        run: |
          ./skw/bin/skw tags \
            -b "$BUCKET" \
            "$KEY"
      - name: Download
        run: |
          ./skw/bin/skw download \
            -b "$BUCKET" \
            -k "$KEY" \
            -t "${{ github.sha }}-java${{ matrix.java }}" \
            ./down
      - name: list got files
        run: ls down/**

  dogfooding_deb:
    runs-on: ubuntu-latest
    needs: build
    container: "ubuntu:latest"
    env:
      GOOGLE_APPLICATION_CREDENTIALS: service.json
    steps:
      # Prepare
      - name: Decrypt service account json
        env:
          GCS_SERVICE_ACCOUNT: ${{ secrets.GCS_SERVICE_ACCOUNT }}
        run: echo $GCS_SERVICE_ACCOUNT | base64 --decode --ignore-garbage > service.json
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
      - name: Install skw from .deb
        run: |
          apt update
          apt install -y ./distributions/skw_amd64.deb

      # Execute
      - name: Check installed path
        run: which skw | grep "/usr/local/bin/skw"
      - name: Upload own jar to GCS
        run: |
          skw upload \
            -b "kesin11_bazel_cache" \
            -k "dogfooding" \
            -t "${{ github.sha }}" -t "latest" \
            -p "dogfooding/${{ github.run_number }}" \
            ./distributions/skw.jar
